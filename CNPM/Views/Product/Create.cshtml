@model CNPM.Models.Product_title

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
</head>
<body>
    @using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form" }))
    {
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.publishing_year, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.publishing_year, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.publisher, htmlAttributes: new { @class = "control-label" })
                        @{Html.RenderAction("SelectPublish", "Product");}
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label" })
                        @{Html.RenderAction("SelectCate", "Product");}
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.author, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.author, new { htmlAttributes = new { @class = "form-control" } })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.giaBia, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.giaBia, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ImagePro, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <img src="@Url.Content(Model.ImagePro)" class="img-fluid" height="150" width="150" id="previewImg" />
                            <input type="file" name="UploadImage" class="form-control-file" onchange="ChangeImage(this, document.getElementById('previewImg'))" />
                        </div>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Submit" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
    <script src="~/Scripts/script.js"></script>
</body>
</html>

