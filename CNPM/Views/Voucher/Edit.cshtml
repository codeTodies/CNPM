@model CNPM.Models.Sale_promotion

@{
    Layout = "~/Views/Layout/Layout_Voucher.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")


    <h2 class="text-center">Chỉnh sửa thông tin voucher</h2>
    <p style="color:red;text-align:center">@ViewBag.ErrorEditVoucher</p>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ID)
                    <div class="form-group">
                        Code
                        @Html.EditorFor(model => model.code, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.code, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        Tên
                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        Điều kiện
                        @Html.EditorFor(model => model.condition, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.condition, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        Mô tả
                        @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        Ngày bắt đầu
                        @Html.EditorFor(model => model.dateStart, new { htmlAttributes = new { @class = "form-control" }, @type = "date" })
                        @Html.ValidationMessageFor(model => model.dateStart, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        Ngày kết thúc
                        @Html.EditorFor(model => model.dateEnd, new { htmlAttributes = new { @class = "form-control", } ,@type = "date" })
                        @Html.ValidationMessageFor(model => model.dateEnd, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        Phần trăm giảm
                        @Html.EditorFor(model => model.percentage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.percentage, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Lưu thay đổi" class="btn btn-success" />
                    </div>
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
